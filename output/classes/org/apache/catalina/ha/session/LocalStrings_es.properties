# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

deltaManager.createSession.newSession = Creada una DeltaSession con Id [{0}] Total contador=[{1}]
deltaManager.createMessage.access = Gestor [{0}]: creado mensaje de sesi\u00f3n [{1}] acceso.
deltaManager.createMessage.accessChangePrimary = Gestor [{0}]: creado mensaje de sesi\u00f3n [{1}] acceso para cambiar el primario.
deltaManager.createMessage.allSessionData = Gestor [{0}] env\u00eda todos los datos de sesi\u00f3n.
deltaManager.createMessage.allSessionTransfered = Gestor [{0}] env\u00eda todos los datos de sesi\u00f3n transferidos
deltaManager.createMessage.delta = Gestor [{0}]: crea mensaje de sesi\u00f3n [{1}] de requerimiento delta.
deltaManager.createMessage.expire = Gestor [{0}]: crea mensaje de sesi\u00f3n [{1}] de expiraci\u00f3n.
deltaManager.createMessage.unableCreateDeltaRequest = No puedo serializar requerimiento delta para la id de sesi\u00f3n [{0}]
deltaManager.dropMessage = Gestor [{0}]: Quita mensaje [{1}] dentro de fase sincronizada GET_ALL_SESSIONS fecha inicio [{2}] fecha mensaje [{3}]
deltaManager.foundMasterMember = Hallado para contexto [{0}] el miembro maestro de r\u00e9plica [{1}]
deltaManager.loading.cnfe = ClassNotFoundException al cargar sesiones persistentes: [{0}]
deltaManager.loading.existing.session = sobrecarga en sesi\u00f3n existente [{0}]
deltaManager.loading.ioe = IOException al cargar sesiones persistentes: [{0}]
deltaManager.managerLoad = Excepci\u00f3n cargando sesiones desde almacenaje persistente
deltaManager.noCluster = Arrancando... no hay cl\u00faster asociado con este contexto: [{0}]
deltaManager.noMasterMember = Arrancando... sin otro miembro para el contexto [{0}] en dominio [{1}]
deltaManager.noMembers = Gestor [{0}]: saltando estado de transferencia. No hay miembros activos en grupo de cl\u00faster.
deltaManager.noSessionState = Gestor [{0}]: No se ha recibido estado de sesi\u00f3n a las [{1}], agotando tiempo tras [{2}] ms.
deltaManager.sendMessage.newSession = El gestor [{0}] env\u00eda nueva sesi\u00f3n [{1}]
deltaManager.expireSessions = Gestor [{0}] expirando sesiones al apagar
deltaManager.receiveMessage.accessed = Gestor [{0}]: accedida sesi\u00f3n [{1}] recibida.
deltaManager.receiveMessage.createNewSession = Gestor [{0}]: creada sesi\u00f3n [{1}] recibida.
deltaManager.receiveMessage.delta = Gestor [{0}]: delta sesi\u00f3n [{1}] recibida.
deltaManager.receiveMessage.error = Gestor [{0}]: No puedo recibir mensaje a trav\u00e9s del canal TCP
deltaManager.receiveMessage.eventType = Gestor [{0}]: recibido SessionMessage de tipo=[{1}] desde [{2}]
deltaManager.receiveMessage.expired = Gestor [{0}]: expirada sesi\u00f3n [{1}] recibida.
deltaManager.receiveMessage.transfercomplete = Gestor [{0}] recibido desde nodo [{1}:{2}] estado de sesi\u00f3n transferido.
deltaManager.receiveMessage.unloadingAfter = Gestor [{0}]: completada la descarga de sesiones
deltaManager.receiveMessage.unloadingBegin = Gestor [{0}]: iniciada descarga de sesiones
deltaManager.receiveMessage.allSessionDataAfter = Gestor [{0}]: estado de sesi\u00f3n deserializado
deltaManager.receiveMessage.allSessionDataBegin = Gestor [{0}]: recibidos datos de estado de sesi\u00f3n
deltaManager.registerCluster = Registrar gestor [{0}] a elemento de cl\u00faster [{1}] con nombre [{2}]
deltaManager.sessionReceived = Gestor [{0}]; estado de sesi\u00f3n enviado a las [{1}] recibido en [{2}] ms.
deltaManager.startClustering = Iniciando gestor de cl\u00faster a las [{0}]
deltaManager.stopped = El gestor [{0}] se est\u00e1 parando
deltaManager.unloading.ioe = IOException al grabar sesiones persistentes: [{0}]
deltaManager.waitForSessionState = Gestor [{0}], requiriendo estado de sesi\u00f3n desde [{1}]. Esta operaci\u00f3n se agotar\u00e1 si no se recibe estado de sesi\u00f3n dentro de [{2}] segundos.
deltaManager.unableSerializeSessionID = No puedo seriallizar la ID de sesi\u00f3n [{0}]
deltaRequest.showPrincipal = El Principal [{0}] est\u00e1 puesto a sesi\u00f3n [{1}]
deltaRequest.wrongPrincipalClass = DeltaManager s\u00f3lo soporta GenericPrincipal. Tu reino utiliz\u00f3 clase principal [{0}].
deltaSession.notifying = Notificando cl\u00faster de expiraci\u00f3n primaria=[{0}] sessionId [{1}]
deltaSession.readSession = readObject() cargando sesi\u00f3n [{0}]
deltaSession.writeSession = writeObject() guardando sesi\u00f3n [{0}]
jvmRoute.cannotFindSession = No puedo hallar sesi\u00f3n [{0}]
jvmRoute.changeSession = Cambiada sesi\u00f3n desde [{0}] a [{1}]
jvmRoute.failover = Detectada una ca\u00edda con diferente jvmRoute - ruta original: [{0}] nueva: [{1}] en id de sesi\u00f3n [{2}]
jvmRoute.foundManager = Hallado Cl\u00faster DeltaManager [{0}] en [{1}]
jvmRoute.missingJvmRouteAttribute = \u00a1No se ha configurado atributo de motor jvmRoute!
jvmRoute.noCluster = La v\u00e1lvula JvmRouterBinderValve se encuentra configurada, pero no se usa el cl\u00faster. A\u00fan funcionar\u00e1 la tolerancia a fallos, siempre que se est\u00e9 usando PersistentManager.
jvmRoute.notFoundManager = No hallado Cl\u00faster DeltaManager [{0}] en [{1}]
jvmRoute.turnoverInfo = Ajustado tiempo de Chequeo a [{0}] mseg
jvmRoute.valve.started = JvmRouteBinderValve arrancada
jvmRoute.valve.stopped = JvmRouteBinderValve parada
jvmRoute.set.orignalsessionid = Puesta id Orginal de Sesi\u00f3n en atributo de requerimiento [{0}] valor: [{1}]
standardSession.notSerializable = No puedo serializar atributo de sesi\u00f3n [{0}] para sesi\u00f3n [{1}]
standardSession.removeAttribute.ise = removeAttribute: Sesi\u00f3n ya invalidada
standardSession.setAttribute.namenull = setAttribute: par\u00e1metro de nombre no puede ser nulo
